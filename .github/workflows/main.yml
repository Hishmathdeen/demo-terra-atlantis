name: Terraform Plan for Modified Directories

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 3: Identify Modified Directories using Python
      - name: Identify Modified Directories
        run: python .github/workflows/identify_modified_dirs.py

      # Step 2: Set up Terraform CLI
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      # Step 4: Run Terraform Plan for each modified directory
      - name: Run Terraform Plan
        run: |
          touch $GITHUB_WORKSPACE/plan_output.txt
          modified_dirs=$(cat $GITHUB_WORKSPACE/modified_dirs.json | jq -r '.[]')
          for dir in $modified_dirs; do
            echo "Running Terraform Plan in $dir"
            cd "$dir"
            terraform init -input=false
            terraform plan -input=false -out=tfplan
            echo "Plan for $dir:" >> $GITHUB_WORKSPACE/plan_output.txt
            terraform show -no-color tfplan >> $GITHUB_WORKSPACE/plan_output.txt
            cd - > /dev/null
          done

      # Step 5: Post Plan Output as PR Comment
      - name: Comment on the PR
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GT_TOKEN }}
          message: |
            **Terraform Plan Results**
            ```plaintext
            $(cat $GITHUB_WORKSPACE/plan_output.txt)
            ```
